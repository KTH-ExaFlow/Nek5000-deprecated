!> @file NEKP4EST
!! @brief include file with parameter and common block definitions for 
!! global nekp4est variables
!! @author Adam Peplinski
!! @date Feb 26, 2016
!=======================================================================
!     log priorities based on sc.h
      integer NP4_LP_ALW, NP4_LP_TRC, NP4_LP_DEB, NP4_LP_VRB, 
     $        NP4_LP_INF, NP4_LP_STT, NP4_LP_PRD, NP4_LP_ESS, 
     $        NP4_LP_ERR, NP4_LP_SLN
      parameter (NP4_LP_ALW=0)  !< always; this will log everything
      parameter (NP4_LP_TRC=1)  !< trace; this will prefix file and line number
      parameter (NP4_LP_DEB=2)  !< debug; any information on the internal state
      parameter (NP4_LP_VRB=3)  !< verbose; information on conditions, decisions
      parameter (NP4_LP_INF=4)  !< info; the main things a function is doing
      parameter (NP4_LP_STT=5)  !< statistics; important for consistency or performance
      parameter (NP4_LP_PRD=6)  !< production; a few lines for a major api function
      parameter (NP4_LP_ESS=7)  !< essential; this logs a few lines max per program
      parameter (NP4_LP_ERR=8)  !< error; this logs errors only
      parameter (NP4_LP_SLN=9)  !< silent; this never logs anything

      integer NP4_LP_DEF  !<  default log threshold for nekp4est
      integer NP4_PKG_ID  !< solver package id for logs doen with sc library
      common /nekp4est_logi/ NP4_LP_DEF, NP4_PKG_ID

!     this stuff should be in other place as it is quite general, but for now it is here
      integer NP4_LSTL_LOG !< length of comment string
      parameter (NP4_LSTL_LOG = 200)
      integer NP4_LSTL_FNM    !< length of file name string
      parameter (NP4_LSTL_FNM = 132)

!     number of children
      integer NP4_NCHILD
      parameter (NP4_NCHILD=2**LDIM)

!     local element count (V mesh)
!     variable for element counting
      integer EL_COUNT
      common /nekp4est_elem_get/ EL_COUNT

!     position of data in cbc and cb arrays
      integer IBC, NFLDT
!     this common block is shared with p4est wrapper
      common /nekp4est_cbci/ IBC,NFLDT

!     module parameters
      integer NP4_IOSTART, NP4_IOSTOP  !< number of the restart and save files
      common /nekp4est_io_file/ NP4_IOSTART, NP4_IOSTOP

      integer NP4_LMAX      !< max refinement level
      common /nekp4est_iparam/ NP4_LMAX

!     p4est mesh info; p4est mesh differs from nekton one
!     np4_nelgt,np4_nelt,np4_nelv- like nelgt,nelt,nelv
!     np4_nelit - global offset of element count (T mesh)
!     np4_mlev - max local quadrant level
      integer NP4_NELGT,NP4_NELIT,NP4_NELT,NP4_NELV, NP4_MLEV
      common /nekp4est_mesh_info/ NP4_NELGT,NP4_NELIT,NP4_NELT,
     $  NP4_NELV,NP4_MLEV

!     arrays for back communication (from nek5000 to p4est element distribution)
!     NP4_LGLNID - mapping of nek5000 to p4est element distribution
!     NP4_NELNID - p4est element number per processor; not sure I will use it 
      integer NP4_LGLNID(LELT), NP4_NELNID(0:LP)
      common /nekp4est_bcomm/ NP4_LGLNID, NP4_NELNID

!     arrays to store old element-processor mappings
!     NP4_NELGT_O - old global element number; T-mesh
!     NP4_NELT_O - old local element number; T-mesh
!     NP4_NELV_O - old local element number; V-mesh
!     NP4_IMAP - was mapping initialised
!     NP4_LGLEL_O - old local-global element mapping; nek side
!     NP4_GLLEL_O - old global-local element mapping; nek side
!     NP4_GLLNID_O - old global element-processor mapping; nek side
      integer NP4_NELGT_O, NP4_NELT_O, NP4_NELV_O, NP4_IMAP
      integer NP4_LGLEL_O(LELT), NP4_GLLEL_O(LELG), NP4_GLLNID_O(LELG)
      common /nekp4est_hcglb_o/ NP4_NELGT_O, NP4_NELT_O, NP4_NELV_O,
     $   NP4_IMAP, NP4_LGLEL_O, NP4_GLLEL_O, NP4_GLLNID_O!,

!     arrays to store global element re-mapping to perform refinement
!     on nek5000 side
!     NP4_MAP_NR - local number of unchanged elements
!     NP4_RFN_NR - local number of refined elements
!     NP4_RFN_NR_S - local number of elements to be send; including refined ones
!     NP4_CRS_NR - local number of coarsened elements
!     NP4_GLGL_MAP - old local to new global element number mapping for unchanged elements
!     NP4_GLGL_MAP_NID - old local to new global element number mapping for unchanged elements; processor id
!     NP4_GLGL_RFN - element number mapping for refined elements
!     NP4_GLGL_CRS - element number mapping for coarsened elements
      integer NP4_MAP_NR, NP4_RFN_NR, NP4_CRS_NR, NP4_RFN_NR_S
      integer NP4_GLGL_MAP(LELT), NP4_GLGL_MAP_NID(LELT), 
     $       NP4_GLGL_RFN(3,LELT),
     $       NP4_GLGL_CRS(2,2**LDIM,LELT)
      common /nekp4est_ref_map/ NP4_MAP_NR,NP4_RFN_NR,NP4_CRS_NR,
     $       NP4_RFN_NR_S, NP4_GLGL_MAP, NP4_GLGL_MAP_NID, 
     $       NP4_GLGL_RFN, NP4_GLGL_CRS

!     arrays for error estimator
!     NP4_MARK - integer mark to refine (1), coarsen (-1) or leave unchanged (0) given block
      integer NP4_MARK(LELT)
!     element level; can be used during refinement/coarsening 
      integer NP4_LEVEL(LELT)
      common /nekp4est_bcomm/ NP4_MARK, NP4_LEVEL

!     logical variables to correlate mesh modification and redistribution
!     additional flag is necessary for resetting dssum and getting new nodes numberring
      logical NP4_IFRESET, NP4_IFRESET_DSS
      common /nekp4est_check/ NP4_IFRESET, NP4_IFRESET_DSS

!     number of refinement/coarsening
      integer NP4_REF_CNT, NP4_EER_CNT
      common /nekp4est_ref_cnt/ NP4_REF_CNT, NP4_EER_CNT

!     hanging elements, faces and edges
!     NP4_HNG_ELM = 1 => at least one hanging face or edge
!     NP4_HNG_FSC - position of hanging face (0..1 in 2D, 0...3 in 3D; p4est numbering)
!     NP4_HNG_EDG - see p8est_lnodels.h p8est_lnodes_decode for info
      integer NP4_HNG_ELM(LELT), NP4_HNG_FSC(2*LDIM,LELT),
     $       	NP4_HNG_EDG(11*(LDIM-2)+1,LELT)
      common /nekp4est_hang/ NP4_HNG_ELM, NP4_HNG_FSC, 
     $			NP4_HNG_EDG

!     arrays storing node multiplicity in stiffness summation for projection and dssum
      real NP4_PR_VMULT(LX1,LY1,LZ1,LELV),
     $     NP4_PR_TMULT(LX1,LY1,LZ1,LELT),
     $     NP4_DS_VMULT(LX1,LY1,LZ1,LELV),
     $     NP4_DS_TMULT(LX1,LY1,LZ1,LELT)
      common /nekp4est_mult/ NP4_PR_VMULT, NP4_PR_TMULT, 
     $                       NP4_DS_VMULT, NP4_DS_TMULT

!     simple timing
!     NP4_TC - total AMR subroutines
!     NP4_TCI - initialisation
!     NP4_TCF - finalisation
!     NP4_TCE - evolution
!     NP4_TCER - error estimator
!     NP4_TCP4 - p4est part
!     NP4_TCP5 - p4est; mesh/ghost destroy/create
!     NP4_TCP6 - p4est; refinement fill
!     NP4_TCP7 - p4est; refine/balance
!     NP4_TCP8 - p4est; partition
!     NP4_TCPN - p4est-nek5000 data transfer
!     NP4_TCPS - mesh size
!     NP4_TCPD - mesh data
!     NP4_TCPM - element-processor mapping
!     NP4_TCPP - call to ParMETIS; full partitioning
!     NP4_TCPPR - call to ParMETIS; partitioning refinement
!     NP4_TCPR - data redistribution
!     NP4_TCL- local operations; refinement, coarsening
!     NP4_TCC - communication, sorting
!     NP4_TCS - reinitialise solver
!     NP4_TCSC - reinitialise solver; coarse grid solver part
!     NP4_T1N, NP4_T2N, NP4_TCN - time spent in nek5000 iterations
      real NP4_TC, NP4_TCI, NP4_TCF, NP4_TCE, NP4_TCER, NP4_TCP4,
     $     NP4_TCP5, NP4_TCP6, NP4_TCP7, NP4_TCP8,
     $	   NP4_TCPN, NP4_TCPS, NP4_TCPD, NP4_TCPM, NP4_TCPR,
     $     NP4_TCPP, NP4_TCPPR, NP4_TCL, NP4_TCC, NP4_TCS, 
     $	   NP4_TCSC, NP4_T1N, NP4_T2N, NP4_TCN
      common /nekp4est_timing/ NP4_TC, NP4_TCI, NP4_TCF, NP4_TCE, 
     $     NP4_TCER, NP4_TCP4, NP4_TCP5, NP4_TCP6, NP4_TCP7, 
     $     NP4_TCP8,
     $     NP4_TCPN, NP4_TCPS, NP4_TCPD, NP4_TCPM, NP4_TCPR,
     $     NP4_TCPP, NP4_TCPPR, NP4_TCL, NP4_TCC, NP4_TCS, 
     $	   NP4_TCSC, NP4_T1N, NP4_T2N, NP4_TCN
 